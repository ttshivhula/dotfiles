"Tshivhula Tshilidzi
set nocompatible              " be iMproved, required
filetype off                  " required
set encoding=UTF-8

let g:ycm_global_ycm_extra_conf = "~/.vim/ycm_extra_conf.py"
highlight YcmErrorLine guibg=#3f0000

"Nerdtree Minimal UI
let NERDTreeMinimalUI=1
let NERDTreeDirArrows=0
let NERDTreeDirArrowExpandable = "\u00a0"
let NERDTreeDirArrowCollapsible = "\u00a0"
let NERDTreeNodeDelimiter = "\x07"
"Auto open NERDTree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif 
"Auto Close if only NERDTree 
let NERDTreeQuitOnOpen = 1
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
Plugin 'preservim/nerdtree'
Plugin 'preservim/nerdcommenter'
Plugin 'morhetz/gruvbox'
Plugin 'junegunn/fzf', { 'dir': '~/opt/fzf' }
Plugin 'junegunn/fzf.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'ycm-core/YouCompleteMe'
Plugin 'vim-syntastic/syntastic'
Plugin 'pangloss/vim-javascript'
Plugin 'gko/vim-coloresque'
Plugin 'ttshivhula/vim-music'
Plugin 'uguu-org/vim-matrix-screensaver'
"Plugin 'neoclide/coc.nvim', {'do': 'yarn install --frozen-lockfile'}
"Plugin 'neoclide/coc-python', {'do': 'yarn install --frozen-lockfile'}
"Plugin 'neoclide/coc-tsserver', {'do': 'yarn install --frozen-lockfile'}
"Plugin 'neoclide/coc-css', {'do': 'yarn install --frozen-lockfile'}
"Plugin 'neoclide/coc-highlight', {'do': 'yarn install --frozen-lockfile'}
Plugin 'jmanoel7/vim-games'
Plugin 'dracula/vim', { 'name': 'dracula' }
Plugin 'mattn/emmet-vim'
Plugin 'diepm/vim-rest-console'
Plugin 'ttshivhula/dotfiles' "This allows automated git when i make changes to vimrc file
Plugin 'maxmellon/vim-jsx-pretty'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'ryanoasis/vim-devicons'
Plugin 'tiagofumo/vim-nerdtree-syntax-highlight'
Plugin 'baskerville/bubblegum'
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
"
"

"execute pathogen#infect()
"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*

"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
"let g:syntastic_check_on_open = 1
"let g:syntastic_check_on_wq = 0

syntax on
filetype plugin indent on
set number
map <C-p> :NERDTreeToggle<CR>
map <C-f> :Files<CR>
map <C-g> :Ag<CR>
map ; :suspend<CR>
colorscheme gruvbox
"colorscheme bubblegum-256-light
"colorscheme dracula
set bg=dark
set t_Co=256
set laststatus=2
let g:airline_theme='bubblegum'
let g:gitgutter_enabled=1
set updatetime=1
" A few common cmus commands
nnoremap <leader>N :call CMUSNext()<cr>
nnoremap <leader>P :call CMUSPrevious()<cr>
nnoremap <leader><Space> :call CMUSPause()<cr>
nnoremap <leader>R :call CMUSToggleRepeat()<cr>
nnoremap <leader>I :call CMUSCurrent()<cr>
" A few common spotify commands
map <silent> <leader>2 :SpNext<cr>
map <silent> <leader>1 :SpPrevious<cr>
map <silent> <leader>i :SpInfo<cr>
map <silent> <leader><Space> :SpToggle<cr>
nnoremap sp :SpSearch<Space>

map <leader>t :term<cr>

let g:spotify_token='OTRlZGMxMzAwYTljNDY0MjgwOTA5YjhlMmM5OWMwYTY6N2ZlNDNhYWNiZTM2NGI5N2IyZmUzMWM2YTQ1OWIxMzI='

:set number relativenumber

:augroup numbertoggle
:  autocmd!
:  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
:  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
:augroup END

" resize current buffer by +/- 5
nnoremap r<left> :vertical resize +5<cr>
nnoremap r<down> :resize +5<cr>
nnoremap r<up> :resize -5<cr>
nnoremap r<right> :vertical resize -5<cr>

"copy from vim to sys clipbord
noremap <Leader>y "*y
noremap <Leader>p "*p
noremap <Leader>Y "+y
noremap <Leader>P "+p
"Tab stop and shit
set tabstop=2
set shiftwidth=2
set expandtab
"Manage VIM Tabs. And yes Vim does have tabs
nnoremap tc :tabnew<Space>
nnoremap <silent> tn :tabnext<CR>
nnoremap <silent> tp :tabprev<CR>
nnoremap <silent> tl :tablast<CR>
nnoremap <silent> tf :tabfirst<CR>


"REST Console stuff
let g:vrc_curl_opts = {
  \ '--connect-timeout' : 10,
  \ '-L': '',
  \ '-i': '',
  \ '-s': '',
  \ '-S': '',
  \ '--max-time': 60,
\}

"RXJS
let g:vim_jsx_pretty_colorful_config = 1 " default 0
